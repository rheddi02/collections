// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model BeautyTips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model EquipmentTips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model HealthTips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model HomeTips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model FoodTips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model PetTips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model ClothTips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model PlantTips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model MachineryTips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model RideTips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model LeisureTips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model EnergyTips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model Videos {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  url         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

model Coins {
  id          Int        @id @default(autoincrement())
  title       String
  categoryId  Int
  description String
  year        String
  type        Type
  url         String     @unique()
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  categories  Categories @relation(fields: [categoryId], references: [id])
  isPublic   Boolean   @default(true) @map("is_public")
  userId    Int
  user      Users     @relation(fields: [userId], references: [id])

  @@index([id])
}

enum Type {
  NEW
  OLD
  SPECIAL
}

enum Role {
  USER
  ADMIN
}

model Categories {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  Coins       Coins[]

  @@index([id])
}

model Users {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  email       String   @unique
  password    String
  role        Role     @default(USER)
  isVerified  Boolean  @default(false) @map("is_verified")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  beautyTips  BeautyTips[]
  equipmentTips EquipmentTips[]
  healthTips  HealthTips[]
  homeTips    HomeTips[]
  foodTips    FoodTips[]
  petTips     PetTips[]
  clothTips   ClothTips[]
  plantTips   PlantTips[]
  machineryTips MachineryTips[]
  rideTips    RideTips[]
  leisureTips LeisureTips[]
  energyTips  EnergyTips[]
  videos      Videos[]
  coins       Coins[]

  @@index([id])
  @@index([username])
  @@index([email])
  @@map("users")
}
